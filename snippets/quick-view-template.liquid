{% comment %}ly_global_begin{% endcomment %}{% include 'ly-global' %}{% comment %}ly_global_end{% endcomment %}<!-- Begin quick-view-template -->
<div class="clearfix" id="quickview-template" style="display:none">
  <div class="overlay"></div>
  <div class="content clearfix">
    <div class="product-img-box col-xs-5">
      <div class="quickview-featured-image product-photo-container"></div>
      <div class="more-view-wrapper">
        <ul class="product-photo-thumbs jcarousel-skin-tango {% if settings.style_moreview == 'horizontal' %} quickview-more-views-owlslider {% else %} quickview-more-view-wrapper-jcarousel {% endif %}">
        </ul>
      </div>
    </div>
  
    <div class="product-shop col-xs-7">
      <div class="product-item">
        <h2 class="product-title"><a>&nbsp;</a></h2>
        
        {% if settings.display_quickview_availability or settings.display_quickview_product_type or settings.display_quickview_vendor %}
        <div class="product-infor">
          {% if settings.display_quickview_availability %}
          <p class="product-inventory"><label><ly-as-4214801>Availability</ly-as-4214801></label><span></span></p>
          {% endif %}
          {% if settings.display_quickview_product_type %}
          <p class="product-type"><label><ly-as-4214802>Product Type</ly-as-4214802></label><span></span></p>
          {% endif %}
          {% if settings.display_quickview_vendor %}
          <p class="product-vendor"><label><ly-as-4214803>Vendor</ly-as-4214803></label><span></span></p>
          {% endif %}
        </div>
        {% endif %}
        
        <div class="countdown" style="display:none"><span>{% comment %}ly_new_settings_replace_for_[ settings.text_countdown ]_begin{% endcomment %}{% assign language = cart.attributes["language"] %}{% if language == nil %}{% assign language = shop.metafields["languages"]["default"] %}{% endif %}{% assign namespace = language | append: "as" %}{% if shop.metafields[namespace]["id4214804"] %}{% assign ly_translation = shop.metafields[namespace]["id4214804"] %}{% else %}{% assign ly_translation = settings.text_countdown %}{% endif %}{{ ly_translation }}{% comment %}ly_new_settings_replace_end{% endcomment %}</span><div class="quickview-clock"></div></div>
        
        {% if settings.display_quickview_short_desc %}
        <p class="item-text product-description"></p>
        {% endif %}

        <div class="details clearfix">
          <form action="/cart/add" method="post" class="variants">
            <select name='id' style="display:none"></select>
            <div class="prices">
              <span class="compare-price"></span>
              <span class="price"></span>
            </div>
            <label for="quantity"><ly-as-4214805>Quantity:</ly-as-4214805></label>
            <div class="dec button">-</div>
            <input type="text" name="quantity" value="1" class="quantity">
            <div class="inc button">+</div>
            
            {% if settings.display_quickview_subtotal %}
            <div class="total-price">
              <label><ly-as-4214806>Subtotal:</ly-as-4214806> </label><span></span>
            </div>
            {% endif %}
            
            <div class="actions">
              <button type="button" class="btn add-to-cart-btn"><ly-as-4214807>Add to cart</ly-as-4214807></button>
            </div>
          </form>
        </div>
        {% if settings.display_product_detail_share %} 
          {% include 'share' with product %}
        {% endif %}
      </div>
    </div>  
        <a href="javascript:void(0)" class="close-window"><ly-as-4214808>Close</ly-as-4214808></a> 
  </div>
</div>
<!-- End of quick-view-template -->
<script type="text/javascript">  
  Shopify.doNotTriggerClickOnThumb = false; 
                                       
  var selectCallbackQuickview = function(variant, selector) {
      var productItem = jQuery('.quick-view .product-item');
          addToCart = productItem.find('.add-to-cart-btn'),
          productPrice = productItem.find('.price'),
          comparePrice = productItem.find('.compare-price'),
          totalPrice = productItem.find('.total-price span');
           
      
      if (variant) {
        if (variant.available) {
          // We have a valid product variant, so enable the submit button
          addToCart.removeClass('disabled').removeAttr('disabled').text('Add to Cart');
    
        } else {
          // Variant is sold out, disable the submit button
          addToCart.val('Sold Out').addClass('disabled').attr('disabled', 'disabled');
        }
    
        // Regardless of stock, update the product price
        productPrice.html(Shopify.formatMoney(variant.price, "{{ shop.money_format }}"));
    
        // Also update and show the product's compare price if necessary
        if ( variant.compare_at_price > variant.price ) {
          comparePrice
            .html(Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}"))
            .show();
          productPrice.addClass('on-sale');
        } else {
          comparePrice.hide();
          productPrice.removeClass('on-sale');
        }
                            
        {% if settings.use_color_swatch %}
        // BEGIN SWATCHES
          var form = jQuery('#' + selector.domIdPrefix).closest('form');
          for (var i=0,length=variant.options.length; i<length; i++) {
            var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');
            if (radioButton.size()) {
              radioButton.get(0).checked = true;
            }
          }
         // END SWATCHES
         {% endif %}
         
		  //update variant inventory
        {% if settings.display_quickview_availability %}
          var inventoryInfo = productItem.find('.product-inventory span');
          if (variant.available) {
            if (variant.inventory_management!=null) {
              inventoryInfo.text(variant.inventory_quantity + " in stock");
            } else {
              inventoryInfo.text("Many in stock");
            }
          } else {
            inventoryInfo.text("Out of stock");
          }
    	{% endif %}
    
        /*recaculate total price*/
        //try pattern one before pattern 2
        var regex = /([0-9]+[.|,][0-9]+[.|,][0-9]+)/g;
        var unitPriceTextMatch = jQuery('.quick-view .price').text().match(regex);

        if (!unitPriceTextMatch) {
          regex = /([0-9]+[.|,][0-9]+)/g;
          unitPriceTextMatch = jQuery('.quick-view .price').text().match(regex);      
        }

        if (unitPriceTextMatch) {
          var unitPriceText = unitPriceTextMatch[0];      
          var unitPrice = unitPriceText.replace(/[.|,]/g,'');
          var quantity = parseInt(jQuery('.quick-view input[name=quantity]').val());
          var totalPrice = unitPrice * quantity;

          var totalPriceText = Shopify.formatMoney(totalPrice, window.money_format);

          totalPriceText = totalPriceText.match(regex)[0];

          var regInput = new RegExp(unitPriceText, "g");  
          var totalPriceHtml = jQuery('.quick-view .price').html().replace(regInput ,totalPriceText); 
          jQuery('.quick-view .total-price span').html(totalPriceHtml);      
        }/*end of price calculation*/
    
    	{% if settings.enable_multiple_currencies %}
        Currency.convertAll('{{ shop.currency }}', jQuery('#currencies').val(), 'span.money', 'money_format');
        {% endif %}
        
        /*begin variant image*/
        if (variant && variant.featured_image) {
            var newImage = Shopify.resizeImage(variant.featured_image.src, 'small');
            newImage = newImage.replace(/https?:/,'');
            jQuery('.quick-view .quickview-more-views img').each(function() {
              var grandSize = jQuery(this).attr('src');
              if (grandSize == newImage) {
                jQuery(this).parent().trigger('click');              
                return false;
              }
            });
        }
        /*end of variant image*/  
    
      } else {
        // The variant doesn't exist. Just a safegaurd for errors, but disable the submit button anyway
        addToCart.text('Unavailable').addClass('disabled').attr('disabled', 'disabled');
      }
    
  };
</script>