{% comment %}ly_global_begin{% endcomment %}{% include 'ly-global' %}{% comment %}ly_global_end{% endcomment %}
{% comment %}
  This is your /cart template. If you are using the Ajaxify Cart plugin,
  your form (with action="/cart{% comment %}ly_checkout_begin{% endcomment %}{% assign language = cart.attributes["language"] %}{% if language == nil %}{% assign language = shop.metafields["languages"]["default"] %}{% endif %}{% assign checkout_code = shop.metafields.language_codes[language] %}{% if checkout_code %}{% assign checkout_code = '?locale=' | append: checkout_code %}{{ checkout_code }}{% endif %}{% comment %}ly_checkout_end{% endcomment %}") layout will be used in the drawer/modal.

  For info on test orders:
    - General http://docs.shopify.com/manual/your-store/orders/test-orders
    - Shopify Payments - http://docs.shopify.com/manual/more/shopify-payments/testing-shopify-payments
{% endcomment %}

{% assign is_sttropez_order = false %}
{% for line in cart.items %}
{% if line.product.vendor == "St Tropez" %}
{% assign is_sttropez_order = true %}
{% endif %}
{% endfor %}

{% if is_sttropez_order %}
{% layout 'theme.sttropez' %}
{% endif %}

<header class="page-header">
  <h1><ly-as-4214952>My Cart</ly-as-4214952></h1>
</header>
<!-- Bold: Quantity Breaks - Step 7 -->
<div id="shappify-qty-cart-msg"></div>
<!-- // end Bold code -->

{% if cart.item_count > 0 %}
<form action="/cart{% comment %}ly_checkout_begin{% endcomment %}{% assign language = cart.attributes["language"] %}{% if language == nil %}{% assign language = shop.metafields["languages"]["default"] %}{% endif %}{% assign checkout_code = shop.metafields.language_codes[language] %}{% if checkout_code %}{% assign checkout_code = '?locale=' | append: checkout_code %}{{ checkout_code }}{% endif %}{% comment %}ly_checkout_end{% endcomment %}" method="post" novalidate>

  <div class="row">
    <div class="wrapper-cart col-xs-12 col-sm-8 col-md-9">
      <div class="cart-title"><h2><ly-as-4214953>Products</ly-as-4214953></h2></div>
      <ul class="cart-list">

      {% comment %}
        Loop through products in the cart
      {% endcomment %}
      {% for item in cart.items %}
        <li>
          <a class="product-img" href="{{ item.url | within: collections.all }}">
            {% comment %}
              More image size options at:
              - http://docs.shopify.com/themes/filters/product-img-url
            {% endcomment %}
            <img src="{{ item | img_url: 'medium' }}"  alt="{% comment %}ly_code_replace_for_[ item.title | escape ]_begin{% endcomment %}{% include 'ly-title' with item %}{{ ly_translation | escape }}{% comment %}ly_code_replace_end{% endcomment %}" />
          </a>

          {% comment %}
            Let's use a sub grids to keep our product image and title together,
            and our quantity, price and remove buttons together
          {% endcomment %}

          {% comment %}
            If you want the product title and any variants in one line, use {% comment %}ly_code_replace_for_[ item.title ]_begin{% endcomment %}{% include 'ly-title' with item %}{{ ly_translation }}{% comment %}ly_code_replace_end{% endcomment %}.
            Below they've been separated for styling purposes.
          {% endcomment %}
          <div class="product-details">
            <a href="{{ item.url }}" class="product-name">
              {% comment %}ly_code_replace_for_[ item.product.title ]_begin{% endcomment %}{% include 'ly-title' with item.product %}{{ ly_translation }}{% comment %}ly_code_replace_end{% endcomment %}
            </a>
            <p class="size">
              {% if item.product.variants.size != 0 %}
              {% unless item.variant.title contains 'Default' %}
              <small>{% comment %}ly_code_replace_for_[ item.variant.title ]_begin{% endcomment %}{% include 'ly-title' with item.variant %}{{ ly_translation }}{% comment %}ly_code_replace_end{% endcomment %}</small>
              {% endunless %}
              {% endif %}
            </p>

            {% comment %}
              Optional, add the vendor
            {% endcomment %}
            <p class="vendor">{% comment %}ly_code_replace_for_[ item.vendor ]_begin{% endcomment %}{% include 'ly-vendor' with item %}{{ ly_translation }}{% comment %}ly_code_replace_end{% endcomment %}</p>

            {% comment %}
              Optional, loop through custom product line items if available
              For more info on line item properties, visit:
                - http://docs.shopify.com/support/your-store/products/how-do-I-collect-additional-information-on-the-product-page-Like-for-a-monogram-engraving-or-customization
            {% endcomment %}

            {% if item.properties.size > 0 %}
            <p>
              {% for p in item.properties %}
              {% unless p.last == blank %}
              {{ p.first }}:

              {% comment %}
                Check if there was an uploaded file associated
              {% endcomment %}
              {% if p.last contains '/uploads/' %}
              <a href="{{ p.last }}">{{ p.last | split: '/' | last }}</a>
              {% else %}
              {{ p.last }}
              {% endif %}
              <br>
              {% endunless %}
              {% endfor %}
            </p>
            {% endif %}

            {% comment %}
            <p class="price">{{ bold_price | money }}</p>
            {% endcomment %}

            <p class="price">{{ item.line_price | money }}</p>

            {% comment %}
              Added data-id for the ajax cart implementation only.
            {% endcomment %}

            <div class="quantity">
              <label><ly-as-4214954>Quantity</ly-as-4214954></label>
              {% assign factor = 1 %}
              {% if customer and (customer.tags contains "PRO" or customer.tags contains "WHS") %}
                {% assign productMetafields = item.product.metafields.product %}
                {% if productMetafields.qty_multiple_factor %}
                  {% assign factor = productMetafields.qty_multiple_factor %}
                {% endif %}
              {% endif %}
              <select id="updates_{{ item.id }}" name="updates[]" class="nice-select qty" data-id="{{ item.id }}">
                {% for i in (1..100) %}
                  {% assign value = i | times: factor %}
                  <option {% if value == item.quantity %} selected="selected" {% endif %} value="{{ value }}">{{ value }}</option>
                {% endfor %}
              </select>

              {% comment %}
                To remove an item from the cart, reload the page with the following parameters.
                Added data-id for the ajax cart implementation only.
              {% endcomment %}
              <a class="remove" href="/cart/change?line={{ forloop.index }}&amp;quantity=0" data-id="{{ item.id }}"><ly-as-4214955>Remove</ly-as-4214955></a>
              <input class="update" type="submit" name="update" class="btn-secondary" value="<ly-as-4214962>Update cart</ly-as-4214962>">
            </div>
          </div>
          <div class="clear-both"></div>
        </li>
        {% endfor %}
      </ul>
    </div>
    <div class="cart-row col-xs-12 col-sm-4 col-md-3">
      <div class="total-price">
      	<h3><ly-as-4214956>SubTotal</ly-as-4214956></h3>
        <p class="price">{{ cart.total_price | money }}</p>
      </div>

      {% comment %}
        Optional, add a textarea for special notes
        - Your theme settings can turn this on or off. Default is on.
        - Make sure you have name="note" for the message to be submitted properly
      {% endcomment %}
      {% if settings.cart_notes %}
      <label class="add-comments" for="cartSpecialInstructions"><span><ly-as-4214957>Note</ly-as-4214957></span><ly-as-4214958>Additional comments</ly-as-4214958></label>
      <textarea name="note" class="input-full" id="cartSpecialInstructions">{{ cart.note }}</textarea>
      {% endif %}

      {% comment %}
        If notes are used, adjust the column width
      {% endcomment %}

      <a class="btn-secondary continue-shopping-button btn" href="{{ cart.items.first.product.collections.first.url }}"><ly-as-4214959>Continue Shopping</ly-as-4214959></a>

      {% comment %}
        name="checkout" is required for the update button to work
      {% endcomment %}
      <input type="submit" name="checkout" class="btn" value="<ly-as-4214963>Proceed to Checkout</ly-as-4214963>">

      {% comment %}
        name="update" is required for the update button to work
      {% endcomment %}

      {% comment %}
        Paypal and Google checkout buttons
      {% endcomment %}
      {% if additional_checkout_buttons %}
      <p>{{ content_for_additional_checkout_buttons }}</p>
      {% endif %}

      {% unless cart.item_count == 0 %}
      {% include 'shipping-rates-calculator' %}
      {% endunless %}
    </div>
  </div>
</form>

{% else %}

<h2><ly-as-4214960>It appears that your cart is currently empty!</ly-as-4214960></h2>
<p><ly-as-4214961>Please select one of our brands above to continue browsing.</ly-as-4214961></p>
{% endif %}

<script>
  $(document).ready(function($) {
    var url = window.location.href.toLowerCase();
    var current_country = '';
    var country_arr = ['au', 'us', 'uk', 'eu'];

    $.each( country_arr, function( i, val ) {
      if (url.indexOf(val + ".store") >= 0) {
        current_country = val;
        return false;
      }
    });

    var anchors = $('.header-top .brands ul li a');

    for (var i = 0; i < anchors.length; i++) {
      if (anchors[i].href.length > 0) {
        anchors[i].href = anchors[i].href + '?country=' + current_country;
      }
    }
  });
</script>